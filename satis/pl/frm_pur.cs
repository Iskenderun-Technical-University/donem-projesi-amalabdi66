using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using suaadabdu.EPL;
using System.Data.SqlClient;

namespace suaadabdu.pl
{
   
    public partial class frm_pur : Form
    {

        satış_yönetimiEntities db = new satış_yönetimiEntities();
        pl.FFRM_PUR_ADD ffrm_pur = new pl.FFRM_PUR_ADD();
        TB_Supp tB_Supp = new TB_Supp();
        TB_PUR tB_PUR = new TB_PUR();
        
        bl.methats methats = new bl.methats();

        int id;

        public TB_Supp TB_Supp { get; private set; }

        public frm_pur()
        {
           InitializeComponent();

            suaadabdu.satış_yönetimiEntities dbContext = new suaadabdu.satış_yönetimiEntities();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.TB_PUR.Load();
            // This line of code is generated by Data Source Configuration Wizard
            gridControl1.DataSource = dbContext.TB_PUR.Local.ToBindingList();
            
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {

        }
        //add
        private void btn_add_Click(object sender, EventArgs e)
        {
            pl.FFRM_PUR_ADD frm_add = new FFRM_PUR_ADD();
            frm_add.id = 0;
            frm_add.btn_add.Text = "ek";
            frm_add.Show();
        }

        private void btn_update_Click(object sender, EventArgs e)
        {
           
            
                db = new satış_yönetimiEntities();
                gridControl1.DataSource = db.TB_PUR.ToList();

            
        }

        private void gridControl1_Move(object sender, EventArgs e)
        {

        }
        //delet
        private void btn_delet_Click(object sender, EventArgs e)
        {

            toast Toast = new toast();
            dialog dialog = new dialog();
            id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("ID"));

            if (id > 0)
            {

                try
                {
                  
                    var rs = MessageBox.Show("silme işlemi", "bub işlemden eminmisin", MessageBoxButtons.YesNo);

                    if (rs == DialogResult.Yes)
                    {

                        tB_PUR= db.TB_PUR.Where(x => x.ID == id).FirstOrDefault();
                        db.Entry(tB_PUR).State = EntityState.Deleted;
                        db.SaveChanges();
                        Toast.txt_caption.Text = "satın alma işlemi kaldırıldı";
                        Toast.Show();
                        update_data();

                    }
                }

                catch
                {
                   dialog.txt_caption.Text = "silinecek kaynak yok";
                    dialog.Width = this.Width;
                    dialog.Show();

                }

                

            }
            else
            {

            }



           void update_data()
            {
                db = new satış_yönetimiEntities();
                gridControl1.DataSource = db.TB_PUR.ToList();

            }


            //search
          void btn_serch_Click()
            {
                var _search = edit_sarch.Text;
                gridControl1.DataSource = db.TB_Supp.Where(x => x.supp_name.Contains(_search) || x.supp_phone.Contains(_search) || x.supp_email.Contains(_search)).ToList();
            }
            
            
        }

        private void btn_edit_Click(object sender, EventArgs e)
        {

            pl.FFRM_PUR_ADD frm_add = new FFRM_PUR_ADD();
            id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("ID"));
            tB_PUR=db.TB_PUR.Where(x=> x.ID==id).FirstOrDefault();
            frm_add.edt_name.Text=tB_PUR.pur_name;
            frm_add.edt_typ.Text = tB_PUR.pur_type;
            frm_add.edt_cat.Text = tB_PUR.pur_cat;
            frm_add.edt_supp.Text = tB_PUR.pur_supp;
            frm_add.edt_det.Text = tB_PUR.pur_det;
            frm_add.edt_buy.Text = tB_PUR.pur_buy.ToString();
            frm_add.edt_sale.Text = tB_PUR.pur_set.ToString();
            frm_add.edt_quantity.Text = tB_PUR.pur_qu.ToString();
            frm_add.edt_tset.Text = tB_PUR.pur_tset.ToString();
            frm_add.edt_tsell.Text = tB_PUR.pur_tbuy.ToString();
            frm_add.edt_tqro.Text = tB_PUR.pur_tpro.ToString();
            frm_add.id=id;
            frm_add.btn_add.Text="değiştir";
            frm_add.Show();


            /*
            SqlConnection con; 

            con = new SqlConnection(@"Data Source=(LocalDB)\MSSQLLocalDB;Initial Catalog=data;Integrated Security=True");


            string sqll = " update from  tb_datagrid set id ='" + id.Text + "' where usrr ='" + usr.Text + "' and pass =" + pass.Text + ;

            con.Open();
            SqlCommand cmd = new SqlCommand();
            cmd.Connection = con;
            cmd.CommandText = sqll;
            cmd.ExecuteNonQuery();
            con.Close();
            */
        }

        private void gridControl1_Click_1(object sender, EventArgs e)
        {

        }

        private void btn_serch_Click(object sender, EventArgs e)
        {
            var _search = edit_sarch.Text;
            gridControl1.DataSource = db.TB_PUR.Where(x => x.pur_name.Contains(_search) || x.pur_type.Contains(_search) || x.pur_cat.Contains(_search) || x.pur_supp.Contains(_search) || x.pur_det.Contains(_search)).ToList();


        }

        private void frm_pur_Load(object sender, EventArgs e)
        {

        }
    } }

    

