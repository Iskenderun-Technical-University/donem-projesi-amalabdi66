using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using suaadabdu.EPL;
using System.Data.SqlClient;

namespace suaadabdu.pl
{
    public partial class frm_cat : Form
    {
        satış_yönetimiEntities db = new satış_yönetimiEntities();
        TB_CAT tb_cat = new TB_CAT();
        bl.methats methats = new bl.methats();
        
        int id;
        public frm_cat()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            suaadabdu.satış_yönetimiEntities dbContext = new suaadabdu.satış_yönetimiEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_CAT.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    gridControl1.DataSource = dbContext.TB_CAT.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {

        }
        //add
        private void btn_add_Click(object sender, EventArgs e)
        {
            pl.FFRM_CAT_ADD frm_add = new FFRM_CAT_ADD();
            frm_add.id = 0;
            frm_add.btn_add.Text="ek";
            frm_add.Show();
        }

        private void btn_update_Click(object sender, EventArgs e)
        {
            update_data();
        }

        private void gridControl1_Move(object sender, EventArgs e)
        {

        }
        //delet
        private void btn_delet_Click(object sender, EventArgs e)
        {
            
            toast Toast = new toast();
            dialog dialog = new dialog();
            try
            {
                id = Convert.ToInt32(tileView1.GetFocusedRowCellValue("ID"));
                var rs = MessageBox.Show("silme işlemi", "bub işlemden eminmisin", MessageBoxButtons.YesNo);
                if (rs == DialogResult.Yes)
                {


                    tb_cat = db.TB_CAT.Where(x => x.ID == id).FirstOrDefault();
                    db.Entry(tb_cat).State = EntityState.Deleted;
                    db.SaveChanges();
                    Toast.txt_caption.Text = "öğe silindi";
                    Toast.Show();
                    update_data();
                    

                 }

            }
            
            catch
            {
                dialog.txt_caption.Text = "silinecek kategori yok";
                dialog.Width = this.Width;
                dialog.Show();


            }


            
            }

        private void update_data()
        {
            db = new satış_yönetimiEntities();
            gridControl1.DataSource = db.TB_CAT.ToList();

        }
        
        
        //search
        private void btn_serch_Click(object sender, EventArgs e)
        {
            var _search = edit_sarch.Text;
            gridControl1.DataSource = db.TB_CAT.Where(x => x.CAT_Name.Contains(_search)).ToList();
        }
        //edit
        private void btn_edit_Click(object sender, EventArgs e)
        {

            pl.FFRM_CAT_ADD frm_add = new FFRM_CAT_ADD();
            id = Convert.ToInt32(tileView1.GetFocusedRowCellValue("ID"));
            tb_cat = db.TB_CAT.Where(x => x.ID == id).FirstOrDefault();

            frm_add.edt_name.Text = tb_cat.CAT_Name.ToString();
            methats.by = tb_cat.CAT_Cover;
            frm_add.pic_cover.Image = Image.FromStream(methats.convert_image());


            frm_add.id = id;
            frm_add.btn_add.Text = "değiştir";
            frm_add.Show();
        }
    }
    }

